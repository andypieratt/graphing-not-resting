[{"/Users/andypieratt/Desktop/graphing-not-resting/client/src/index.js":"1","/Users/andypieratt/Desktop/graphing-not-resting/client/src/App.js":"2","/Users/andypieratt/Desktop/graphing-not-resting/client/src/components/Navbar.js":"3","/Users/andypieratt/Desktop/graphing-not-resting/client/src/pages/SearchBooks.js":"4","/Users/andypieratt/Desktop/graphing-not-resting/client/src/pages/SavedBooks.js":"5","/Users/andypieratt/Desktop/graphing-not-resting/client/src/components/SignupForm.js":"6","/Users/andypieratt/Desktop/graphing-not-resting/client/src/components/LoginForm.js":"7","/Users/andypieratt/Desktop/graphing-not-resting/client/src/utils/auth.js":"8","/Users/andypieratt/Desktop/graphing-not-resting/client/src/utils/API.js":"9","/Users/andypieratt/Desktop/graphing-not-resting/client/src/utils/localStorage.js":"10","/Users/andypieratt/Desktop/graphing-not-resting/client/src/utils/mutations.js":"11","/Users/andypieratt/Desktop/graphing-not-resting/client/src/utils/queries.js":"12"},{"size":266,"mtime":1657571586545,"results":"13","hashOfConfig":"14"},{"size":1207,"mtime":1657900653641,"results":"15","hashOfConfig":"14"},{"size":2524,"mtime":1657571586545,"results":"16","hashOfConfig":"14"},{"size":5313,"mtime":1657917999479,"results":"17","hashOfConfig":"14"},{"size":3971,"mtime":1657920607090,"results":"18","hashOfConfig":"14"},{"size":3762,"mtime":1657833495212,"results":"19","hashOfConfig":"14"},{"size":2783,"mtime":1657833850842,"results":"20","hashOfConfig":"14"},{"size":1234,"mtime":1657571586546,"results":"21","hashOfConfig":"14"},{"size":1533,"mtime":1657829075185,"results":"22","hashOfConfig":"14"},{"size":801,"mtime":1657829081964,"results":"23","hashOfConfig":"14"},{"size":1024,"mtime":1657920374323,"results":"24","hashOfConfig":"14"},{"size":727,"mtime":1657900070068,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1txtvwd",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/andypieratt/Desktop/graphing-not-resting/client/src/index.js",[],["53","54"],"/Users/andypieratt/Desktop/graphing-not-resting/client/src/App.js",[],"/Users/andypieratt/Desktop/graphing-not-resting/client/src/components/Navbar.js",[],"/Users/andypieratt/Desktop/graphing-not-resting/client/src/pages/SearchBooks.js",["55"],"/Users/andypieratt/Desktop/graphing-not-resting/client/src/pages/SavedBooks.js",["56","57","58"],"/Users/andypieratt/Desktop/graphing-not-resting/client/src/components/SignupForm.js",["59"],"import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\n\n// import { createUser } from '../utils/API';\nimport { ADD_USER } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\n\nconst SignupForm = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n  const [addUser, { error }] = useMutation(ADD_USER);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      // const response = await ADD_USER(userFormData);\n\n      // if (!response.ok) {\n      //   throw new Error(\"something went wrong!\");\n      // }\n\n      // const { token, user } = await response.json();\n      const { data } = await addUser({\n        variables: { ...userFormData },\n      });\n\n      console.log(data);\n      Auth.login(data.addUser.token);\n    } catch (err) {\n      console.error(err);\n      // setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert\n          dismissible\n          onClose={() => setShowAlert(false)}\n          show={showAlert}\n          variant=\"danger\"\n        >\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"username\">Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Your username\"\n            name=\"username\"\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Username is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Your email address\"\n            name=\"email\"\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Email is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Your password\"\n            name=\"password\"\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Password is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={\n            !(\n              userFormData.username &&\n              userFormData.email &&\n              userFormData.password\n            )\n          }\n          type=\"submit\"\n          variant=\"success\"\n        >\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;\n","/Users/andypieratt/Desktop/graphing-not-resting/client/src/components/LoginForm.js",["60"],"// see SignupForm.js for comments\nimport { useMutation } from \"@apollo/client\";\nimport React, { useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\n\n// import { loginUser } from '../utils/API';\nimport { LOGIN_USER } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ email: \"\", password: \"\" });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n  const [login, { error }] = useMutation(LOGIN_USER);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await login({\n        variables: { ...userFormData },\n      });\n      console.log(data);\n      Auth.login(data.login.token);\n    } catch (err) {\n      console.error(err);\n      // setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert\n          dismissible\n          onClose={() => setShowAlert(false)}\n          show={showAlert}\n          variant=\"danger\"\n        >\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Your email\"\n            name=\"email\"\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Email is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Your password\"\n            name=\"password\"\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Password is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type=\"submit\"\n          variant=\"success\"\n        >\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","/Users/andypieratt/Desktop/graphing-not-resting/client/src/utils/auth.js",[],"/Users/andypieratt/Desktop/graphing-not-resting/client/src/utils/API.js",[],"/Users/andypieratt/Desktop/graphing-not-resting/client/src/utils/localStorage.js",[],"/Users/andypieratt/Desktop/graphing-not-resting/client/src/utils/mutations.js",[],"/Users/andypieratt/Desktop/graphing-not-resting/client/src/utils/queries.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":92,"column":15,"nodeType":"67","messageId":"68","endLine":92,"endColumn":19},{"ruleId":"65","severity":1,"message":"69","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},{"ruleId":"65","severity":1,"message":"70","line":1,"column":27,"nodeType":"67","messageId":"68","endLine":1,"endColumn":36},{"ruleId":"65","severity":1,"message":"71","line":25,"column":11,"nodeType":"67","messageId":"68","endLine":25,"endColumn":18},{"ruleId":"65","severity":1,"message":"72","line":20,"column":21,"nodeType":"67","messageId":"68","endLine":20,"endColumn":26},{"ruleId":"65","severity":1,"message":"72","line":14,"column":19,"nodeType":"67","messageId":"68","endLine":14,"endColumn":24},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]